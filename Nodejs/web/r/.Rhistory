Sys.getlocale()
library(mongolite)
con <- mongo("mentos", url="mongodb://localhost:27017/mentos")
con$find()
install.packages("tm")
library(KoNLP)
library(rJava)
library(KoNLP)
library(tm)
library(ggplot2)
library(tm)
con$find()
con$find({c_no:12})
con$find(c_no:12)
install.packages(jsonlite)
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
install.packages("jsonlite")
library(jsonlite)
con$find({c_no:12})
data <- con$find('{"c_no":12}')
data
data(c_content)
data.c_content
data[1]
data[2]
text <- data[2]
text
show text
text[1]
text[0]
text[1]
df <- data.frame(text)
df
textdata <- df[df$data, ]
textdata
textdata = gsub("[[:punct:]]", "", textdata)
textdata = gsub("[[:punct:]]", "", textdata)
ry.error = function(x)
{
y = NA
try_error = tryCatch(tolower(x), error=function(e) e)
if (!inherits(try_error, "error"))
y = tolower(x)
return(y)
}
textdata = sapply(textdata, try.error)
textdata = textdata[!is.na(textdata)]
names(textdata) = NULL
library(KoNLP)
library(rJava)
library(KoNLP)
df <- data.frame(data)
textdata <- df[df$data, ]
textdata = gsub("[[:punct:]]", "", textdata)
textdata = gsub("[[:punct:]]", "", textdata)
ry.error = function(x)
{
y = NA
try_error = tryCatch(tolower(x), error=function(e) e)
if (!inherits(try_error, "error"))
y = tolower(x)
return(y)
}
textdata = sapply(textdata, try.error)
textdata = textdata[!is.na(textdata)]
names(textdata) = NULL
install.packages("wordcloud")
install.packages("RColorBrewer")
install.packages("SnowballC")
library(wordcloud)
library(RColorBrewer)
library(wordcloud)
library(SnowballC)
library(ggplot2)
df <- data.frame(data)
textdata <- df[df$data, ]
textdata = gsub("[[:punct:]]", "", textdata)
textdata = gsub("[[:punct:]]", "", textdata)
ry.error = function(x)
{
y = NA
try_error = tryCatch(tolower(x), error=function(e) e)
if (!inherits(try_error, "error"))
y = tolower(x)
return(y)
}
textdata = sapply(textdata, try.error)
textdata = textdata[!is.na(textdata)]
names(textdata) = NULL
class_emo = classify_emotion(textdata, algorithm="bayes", prior=1.0)
emotion = class_emo[,7]  //unknown 포함 7종의 감정단어   분류
emotion[is.na(emotion)] = "unknown"
library(tm)
library(KoNLP)
library(tm)
df <- data.frame(data)
textdata <- df[df$data, ]
textdata = gsub("[[:punct:]]", "", textdata)
textdata = gsub("[[:punct:]]", "", textdata)
ry.error = function(x)
{
y = NA
try_error = tryCatch(tolower(x), error=function(e) e)
if (!inherits(try_error, "error"))
y = tolower(x)
return(y)
}
textdata = sapply(textdata, try.error)
textdata = textdata[!is.na(textdata)]
names(textdata) = NULL
remove.packages("tm")
install.packages("tm")
install.packages("tm")
library(tm)
library(KoNLP)
library(rJava)
library(KoNLP)
library(tm)
library(rJava)
library(KoNLP)
library(rJava)
library(KoNLP)
library(tm)
library(tm)
library(tm)
library(mongolite)
library(jsonlite)
con <- mongo("mentos", url="mongodb://localhost:27017/mentos")
text <- con$find('{"c_no":12}')
text
text <- text[2]
text
df <- do.call("rbind", lapply(text,as.data.frame))
df
df$ptext
df$ptext <- df
df$ptext
df$ptext <- sapply(df$ptext, function(x){})
df$ptext
df$ptext ,- df
df$ptext <- df
df$ptext
df$ptext <- sapply(df$ptext, function(x){})
df <- do.call("rbind", lapply(text,as.data.frame))
df
df$ptext <- df
df$ptext
df$ptext <- sapply(df$ptext, function(x) {
paste(extractNoun(x), collapse = " ")
})
df$ptext
myCorpus_ <- Corpus(VectorSource(df$ptext))
myCorpus_ <- tm_map(myCorpus_, removePunctuation)
myCorpus_ <- tm_map(myCorpus_, removeNumbers)
myCorpus_ <- tm_map(myCorpus_, tolower)
myCorpus_
myTdm <- TermDocumentMatrix(myCorpus, control = list(wordLengths = c(2, Inf)))
myTdm <- TermDocumentMatrix(myCorpus_, control = list(wordLengths = c(2, Inf)))
asdf = "ㅎㅏㅎㅏㅎㅏㅏㅏ"
asdf
library(rJava)
library(KoNLP)
library(KoNLP)
useSejongDic()
useSejongDic()
sentence <- '아버지가 방에 들어가신다.'
extractNoun(sentence)
library(rJava)
library(KoNLP)
library(KoNLP)
useSejongDic()
getwd
getwd()
library(rJava)
library(KoNLP)
useSejongDic()
library(mongolite)
locale
locale
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
x+2
Sys.getlocale()
a <- 3
b <- 7
c <- 6
vec1 <- c(a, b, c)
max(vec1)
max(vec1$Size)
which(max(vec1))
which.max(vec1)
vec1[which.max(vec1)]
a  <- 3
b <- 6
c <- 6
vec1 <- c(a, b, c)
which.max(vec1)
vec2 <- c(c, b, a)
which.max(vec2)
if(which.max(sum1) == which.max(sum2)){}
if(which.max(sum1) == which.max(sum2)){
index <- 0
}
library(rJava)
library(KoNLP)
useSejongDic()
library(mongolite)
library(jsonlite)
connection <- mongo("mentos", url = "mongodb://localhost:27017/mentos")
connection$find()
qry <- paste('{"c_no":', 12,\,"c_title":',"슬프다",\,"c_content":',"우울해",'}')
qry <- paste('{"c_no":', 12,',"c_title":',"슬프다",',"c_content":',"우울해",'}')
qry
qry <- paste('{"c_no":', 12,',"c_title":',""슬프다"",',"c_content":',""우울해"",'}')
qry <- paste('{"c_no":', 12,',"c_title":',"\"슬프다\"",',"c_content":',"\"우울해\"",'}')
qry
connection$find(qry)
content <- connection$find(qry)
content[3]
content[,1]
content<-content[3]
content[,1]
index <- 2
connection$update(query = paste('{"c_no":', 12,',"c_title":',"\"슬프다\"",',"c_content":',"\"우울해\"",'}'),update = '{ "$set" : { "c_sentiment" : ',index,'} }')
connection$update(query = paste('{"c_no":', 12,',"c_title":',"\"슬프다\"",',"c_content":',"\"우울해\"",'}'),update = '{ $set : { "c_sentiment" : ',index,'} }')
connection$update(query = paste0('{"c_no":', 12,',"c_title":',"\"슬프다\"",',"c_content":',"\"우울해\"",'}'),update = '{ "$set" : { "c_sentiment" : ',index,'} }')
connection$update(query = paste('{"c_no":', 12,',"c_title":',"\"슬프다\"",',"c_content":',"\"우울해\"",'}'),update = '{ "$set" : { "c_sentiment" : ',index,'} }')
qry < -paste('{"c_no":', 12,',"c_title":',"\"슬프다\"",',"c_content":',"\"우울해\"",'}')
qry <- paste('{"c_no":', 12,',"c_title":',"\"슬프다\"",',"c_content":',"\"우울해\"",'}')
qry
qry <- paste0('{"c_no":', 12,',"c_title":',"\"슬프다\"",',"c_content":',"\"우울해\"",'}')
qry
uqry <- paste0('{ "$set" : { "c_sentiment" : ',index,'} }')
uqry
connection$update(query = qry,update = uqry)
connection$find()
library(rJava)
library(KoNLP)
useSejongDic()
library(mongolite)
setwd("/Users/joinhwan/git/mentos/Nodejs/web/r")
attach(input[[1]])
RELAX <- read.table("relax.txt", header = FALSE, stringsAsFactors = FALSE)
RELAX <- RELAX[,1]
BORING <- read.table("boring.txt", header = FALSE, stringsAsFactors = FALSE)
BORING <- BORING[,1]
HAPPY <- read.table("happy.txt", header = FALSE, stringsAsFactors = FALSE)
HAPPY <- HAPPY[,1]
ANGER <- read.table("anger.txt", header = FALSE, stringsAsFactors = FALSE)
ANGER <- ANGER[,1]
FEAR <- read.table("fear.txt", header = FALSE, stringsAsFactors = FALSE)
FEAR <- FEAR[,1]
HATE <- read.table("hate.txt", header = FALSE, stringsAsFactors = FALSE)
HATE <- HATE[,1]
DEPRESS <- read.table("depress.txt", header = FALSE, stringsAsFactors = FALSE)
DEPRESS <- DEPRESS[,1]
connection <- mongo("mentos", url = "mongodb://localhost:27017/mentos")
connection$find()
123
connection$find()
